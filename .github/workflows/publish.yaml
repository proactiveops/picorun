name: Publish

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Cut a Release

    runs-on: ubuntu-latest

    permissions:
      id-token: write

    steps:
    - name: Checkout
      id: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Python
      id: python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Build
      id: build
      run: |
        python -m pip install '.[build]'
        python -m build
        twine check --strict dist/*

    - name: Publish on PyPI
      id: publish
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Create release
      id: create-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="PicoRun ${tag#v}" \
            --generate-notes

    - name: Get Asset name
      id: asset-name
      run: |
        export PKG=$(ls dist/ | grep tar)
        set -- $PKG
        echo "name=$1" >> $GITHUB_ENV

    - name: Upload Release Asset (sdist) to GitHub
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{ env.name }}
        asset_name: ${{ env.name }}
        asset_content_type: application/zip